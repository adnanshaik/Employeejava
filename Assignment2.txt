1.Use random function ((RANDOM)) to get single digit.

#!/bin/bash -x

random=$((RANDOM%10))
echo $random

OUTPUT:
+ random=5
+ echo 5
5



2.Use random to get dice number between 1 to 6 

#!/bin/bash -x

random=$((RANDOM%6 + 1))
echo $random


OUTPUT:
+ random=1
+ echo 1
1



3.Add to random dice number and print the result.

#!/bin/bash -x

number1=$((RANDOM%6))
number2=$((RANDOM%6))
result=$((number1+number2))
echo $result

OUTPUT:

+ number1=1
+ number2=5
+ result=6
+ echo 6
6


4.Write a program that reads 5 random 2 digit values,then find their sum and the averages
#!/bin/bash -x

for (( i=1;i<=5;i++ ))
do
        random=$((RANDOM%100))
        ((sum+=random))
done
avg=$((sum/5))
echo "sum is="$sum" and avg is="$avg

OUTPUT:
sum is=273 and avg is=54


Q.5 Unit Conversion:
a)1ft=12in then 42in=?

#!/bin/bash -x
inch=42
ft=`echo "scale=2;$inch/12" | bc`
echo $inch "inch="$ft"ft" 

OUTPUT:
+ inch=42
++ echo 'scale=2;42/12'
++ bc
+ ft=3.50
+ echo 42 inch=3.50ft
42 inch=3.50ft

b)Rectangular plot of 60ft x 40ft in meters

#!/bin/bash -x
l=60 w=40
area=$((l*w))
result=`echo "$area*0.09290304" | bc`
echo $result"m2"

OUTPUT:
+ l=60
+ w=40
+ area=2400
++ echo '2400*0.09290304'
++ bc
+ result=222.96729600
+ echo 222.96729600m2
222.96729600m2




c)Calculate area of 25 such plots in acres


l=60 w=40  totalPlots=25
areaOfoneplot=$((60*40))                           ................#area =lxw
areaOftotalplots=$((areaOfoneplot*totalPlots))
echo $areaOftotalplots
acres=`echo "scale=3;$areaOftotalplots/43560" | bc` ........#acre=area/1ft2 (1ft2=43560)    
echo $acres"acres"

OUTPUT:
60000
1.377acres

 
6.write a program that reads 5 random 3 digits values and then outputs the minimum and maximim value
#!/bin/bash -x
for i in 1 2 3 4 5
do
        a=$((RANDOM%1000))
      if [ $i -eq 1 ]
       then
        min=$a
        max=$a
       continue
        elif [ $a -gt $max ]
        then
         max=$a
        elif [ $a -lt $min ]
         then
         min=$a
fi
done
echo "max="$max "min="$min

OUTPUT:

max=703 min=26


7.Write a program that takes day and month from the command line and print true if day of month is between march 20 and june 20.false otherwise.

#!/bin/bash -x

read -p "enter day :" day
read -p "enter month :" month

if [ $day -gt 19 ] && [[ $month == "march" ]]
then
        echo "True"
elif [ $day -lt 31 ] && [[ $month == "april" ]]
then
        echo "True"
elif [ $day -lt 32 ] && [[ $month == "may" ]]
then
        echo "True"
elif [ $day -lt 21 ] && [[ $month == "june" ]]
then
        echo "True"
else
        echo "False"
fi


OUTPUT :

enter day :21
enter month :march
True

 
8.Write program that takes input as a year and outputs as a leap year or not.
#!/bin/bash -x

read -p "enter year:" y
if [ $((y%400)) -eq 0 ] || [ $((y%4)) -eq 0 ] && [ $((y%100)) -ne 0 ]
then
        echo $y "is a leap year"
else
        echo "not a leap year"
fi

output:

enter year:1997
not a leap year




9.Write a program to simulate a coin flip out "heads" or "tails" accordingly.
#!/bin/bash -x

random=$((RANDOM%2))
if [ $random -eq 0 ]
then
        echo "heads"
else
        echo "tails"
fi

output:

tails



10.Read a single digit number and write the number in word.
#!/bin/bash -x

read -p "enter num" num
if [ $num -eq 1 ]
then
echo "one"
elif [ $num -eq 2 ]
then
echo "two"
elif [ $num -eq 3 ]
then
echo "three"
elif [ $num -eq 4 ]
then
echo "four"
elif [ $num -eq 5 ]
then
echo "five"
elif [ $num -eq 6 ]
then
echo "six"
elif [ $num -eq 7 ]
then
echo "seven"
elif [ $num -eq 8 ]
then
echo "eight"
elif [ $num -eq 9 ]
then
echo "nine"
else 
echo "enter valid number"
fi

output:

enter num5
five



11.Read a number and display the week day(sun,mon..)

#!/bin/bash -x

read -p "enter num" num
if [ $num -eq 1 ]
then
echo "sunday"
elif [ $num -eq 2 ]
then
echo "monday"
elif [ $num -eq 3 ]
then
echo "tuesday"
elif [ $num -eq 4 ]
then
echo "wednesday"
elif [ $num -eq 5 ]
then
echo "thursday"
elif [ $num -eq 6 ]
then
echo "friday"
elif [ $num -eq 7 ]
then
echo "saturday"
else 
echo "enter valid number"
fi

output:

enter num4
wednesday



12.Read a number 1,10,100,1000 etc and display unit,ten,hundred..

#!/bin/bash -x

read -p "enter num" num
if [ $num -eq 1 ]
then
echo "one"
elif [ $num -eq 10 ]
then
echo "ten"
elif [ $num -eq 100 ]
then
echo "hundred"
elif [ $num -eq 1000 ]
then
echo "thousand"
else 
echo "enter valid number"
fi

output:

enter num100
hundred


13.Enter 3 nos do the following arithmetic operations and find the one that is max and min

1.a+b*c 2.c+a/b 3.a%b+c 4.a*b+c

#!/bin/bash 

read -p "enter num1:" a
read -p "enter num2:" b
read -p "enter num3:" c

echo "$a+$b*$c" | bc
echo "$a%$b+$c" | bc
echo "$c+$a/$b" | bc
echo "$a*$b+$c" | bc

min=$a
max=$a

for i in $b $c
do
        if [ $i -gt $max ]
        then
          max=$i
        elif [ $i -lt $min ]
        then
          min=$i
        fi
done

echo "max ="$max "min="$min

output:

enter num1:2
enter num2:6
enter num3:7
44
9
7
19
max =7 min=2



14.Read a single digit num and write the number in word using case

#!/bin/bash -x

read -p "enter num " num
case $num in
1) echo "one" ;;
2) echo "two" ;;
3) echo "three" ;;
4) echo "four" ;;
5) echo "five" ;;
6) echo "six" ;;
7) echo "seven" ;;
8) echo "eight" ;;
9) echo "nine" ;;
*) echo "enter valid num" ;;
esac

output

enter num 5
five


15.Read a number and display the week day(sun,mon..)

#!/bin/bash -x

read -p "enter num " num
case $num in
1) echo "sunday" ;;
2) echo "monday" ;;
3) echo "tuesday" ;;
4) echo "wednesday" ;;
5) echo "thursday" ;;
6) echo "friday" ;;
7) echo "saturday" ;;
*) echo "enter valid num" ;;
esac

output

enter num 3
tuesday

16.Read number 1 10 100 1000 etc and display unit ten hudred thousand

#!/bin/bash -x

read -p "enter num " num
case $num in
1) echo "one" ;;
10) echo "ten" ;;
100) echo "hundred" ;;
1000) echo "thousand" ;;
*) echo "enter valid num" ;;
esac

output:

enter num 1000
thousand


17.Write a program that takes user input and does unit conversion of different length units
1.inch to ft
2.ft to inch
3.ft to mtr
4.mtr to ft

#!/bin/bash -x
read -p "enter 1:inch to ft 2:ft to inch 3.ft to mtr 4.mtr to ft " num
case $num in
1)read -p "entr inch value:" i
ft=`echo "scale=2;$i/12" | bc`
echo $i "inch="$ft"ft" ;;

2)read -p "entr ft value:" i
inch=`echo "scale=2;$i*12" | bc`
echo $i "ft=" $inch "inch" ;;

3)read -p "entr ft value:" i
mtr=`echo "scale=2;$i*0.305" | bc`
echo $i "ft="$mtr"mtr" ;;

4)read -p "entr mtr value:" i
mtr=`echo "scale=2;$i/0.305" | bc`
echo $i "mtr="$mtr"ft" ;;

*)echo "invalid number"
esac

output:

enter 1:inch to ft 2:ft to inch 3.ft to mtr 4.mtr to ft 1
entr inch value:42
42 inch=3.50ft












































